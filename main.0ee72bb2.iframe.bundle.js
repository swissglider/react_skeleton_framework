(self.webpackChunklivestorybook=self.webpackChunklivestorybook||[]).push([[179],{"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{parameters:()=>parameters});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.kg.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)},"./stories/Hooks/useAppStructure.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AddNewMenu:()=>AddNewMenu,DeleteNewMenu:()=>DeleteNewMenu,EmbeddedMenu:()=>EmbeddedMenu,Set:()=>Set,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Home.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/grommet-icons/es6/icons/NewWindow.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/grommet-icons/es6/icons/ChapterAdd.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Network.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Hooks/useAppStructure",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O,argTypes:{},args:{},parameters:{storySource:{source:"import React, { FC, useEffect } from 'react';\nimport { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\nimport { Home, NewWindow, ChapterAdd, Network } from 'grommet-icons';\n\nexport default {\n    title: 'Doc/Skeleton/Hooks/useAppStructure',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of hook:useAppStructure',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst SetTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const HomePageComponent: FC<any> = () => {\n        return <div>Home Page</div>;\n    };\n\n    const SecondPageComponent: FC<any> = ({ name = 'Not set' }: any) => {\n        return (\n            <div>\n                <h3>Second Page</h3>\n                <hr />\n                <p>Parameter:Name = {name}</p>\n            </div>\n        );\n    };\n\n    const MorePage1: FC<any> = () => {\n        return <div>More Page 1</div>;\n    };\n\n    const MorePage2: FC<any> = () => {\n        return <div>More Page 2</div>;\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            mainMenu: true,\n            moreMenu: false,\n            menuIcon: Home,\n            isEmbedded: false,\n            Component: HomePageComponent,\n        },\n        SecondPageComponent: {\n            menuName: 'SecondPageComponent',\n            default: false,\n            menuIcon: NewWindow,\n            isEmbedded: false,\n            Component: SecondPageComponent,\n            parameters: { name: 'Second Page ðŸ˜€' },\n        },\n        MorePage1: {\n            menuName: 'MorePage1',\n            default: false,\n            mainMenu: false,\n            moreMenu: true,\n            menuIcon: ChapterAdd,\n            isEmbedded: false,\n            Component: MorePage1,\n        },\n        MorePage2: {\n            menuName: 'MorePage2',\n            mainMenu: false,\n            moreMenu: true,\n            Component: MorePage2,\n        },\n    };\n\n    useEffect(() => {\n        titleState.setTitle('set');\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const Set = SetTemplate.bind({});\nSet.args = {};\n\nconst AddNewMenuTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const MorePage1: FC<any> = () => {\n        return <div>Added More Page 1</div>;\n    };\n\n    const AddMenu: FC<any> = () => {\n        return <div>Added Menu</div>;\n    };\n\n    const HomePageComponent: FC<any> = () => {\n        const appStructureState1 = Skeleton.Hooks.useAppStructure();\n        const addNewMenu = () => {\n            appStructureState1.addNewMenu('MorePage1', {\n                menuName: 'MorePage1',\n                mainMenu: false,\n                moreMenu: true,\n                Component: MorePage1,\n            });\n            appStructureState1.addNewMenu('AddMenu', {\n                menuName: 'AddMenu',\n                mainMenu: true,\n                moreMenu: false,\n                Component: AddMenu,\n                menuIcon: ChapterAdd,\n            });\n        };\n        return (\n            <div>\n                <h3>Add New Menu</h3>\n                <p>AddMenu available: {appStructureState1.isMenuAvailable('AddMenu').toString()}</p>\n                <hr />\n                <button onClick={() => addNewMenu()}>AddNewMenu</button>\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            mainMenu: true,\n            moreMenu: false,\n            menuIcon: Home,\n            isEmbedded: false,\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        titleState.setTitle('addNewMenu');\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const AddNewMenu = AddNewMenuTemplate.bind({});\nAddNewMenu.args = {};\n\nconst DeleteMenuTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const MoreMenuToDelete: FC<any> = () => {\n        return <div>More Menu to delete</div>;\n    };\n\n    const MenuToDelete: FC<any> = () => {\n        return <div>Menu to delete</div>;\n    };\n\n    const HomePageComponent: FC<any> = () => {\n        const appStructureState1 = Skeleton.Hooks.useAppStructure();\n        const deleteMenu = () => {\n            appStructureState1.deleteMenu('MoreMenuToDelete');\n            appStructureState1.deleteMenu('MenuToDelete');\n        };\n        return (\n            <div>\n                <h3>Delte Menu</h3>\n                <p>MenuToDelete available: {appStructureState1.isMenuAvailable('MenuToDelete').toString()}</p>\n                <hr />\n                <button onClick={() => deleteMenu()}>DeleteMenu</button>\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            mainMenu: true,\n            moreMenu: false,\n            menuIcon: Home,\n            isEmbedded: false,\n            Component: HomePageComponent,\n        },\n        MoreMenuToDelete: {\n            menuName: 'MoreMenuToDelete',\n            mainMenu: false,\n            moreMenu: true,\n            Component: MoreMenuToDelete,\n        },\n        MenuToDelete: {\n            menuName: 'MenuToDelete',\n            mainMenu: true,\n            moreMenu: false,\n            Component: MenuToDelete,\n            menuIcon: ChapterAdd,\n        },\n    };\n\n    useEffect(() => {\n        titleState.setTitle('deleteMenu');\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const DeleteNewMenu = DeleteMenuTemplate.bind({});\nDeleteNewMenu.args = {};\n\nconst EmbeddedMenuTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const Page1: FC<any> = () => {\n        return <div>I'm Page1</div>;\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        Embedded1: {\n            menuName: 'Embedded1',\n            default: true,\n            menuIcon: Network,\n            isEmbedded: true,\n            embeddedLink: '/iframe.html?id=doc-app-skeleton--standard&globals=backgrounds.grid:false&viewMode=story',\n        },\n        Page1: {\n            menuName: 'Page1',\n            Component: Page1,\n            menuIcon: ChapterAdd,\n        },\n    };\n\n    useEffect(() => {\n        titleState.setTitle('embedded');\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\nexport const EmbeddedMenu = EmbeddedMenuTemplate.bind();\nEmbeddedMenu.args = {};\n",locationsMap:{set:{startLoc:{col:25,line:33},endLoc:{col:1,line:101},startBody:{col:25,line:33},endBody:{col:1,line:101}},"add-new-menu":{startLoc:{col:32,line:106},endLoc:{col:1,line:164},startBody:{col:32,line:106},endBody:{col:1,line:164}},"delete-new-menu":{startLoc:{col:32,line:169},endLoc:{col:1,line:229},startBody:{col:32,line:169},endBody:{col:1,line:229}},"embedded-menu":{startLoc:{col:34,line:234},endLoc:{col:1,line:264},startBody:{col:34,line:234},endBody:{col:1,line:264}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.Uh})]})},description:{component:"usage of hook:useAppStructure"}},layout:"fullscreen"}};var Set=function SetTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppStructure(),AppStructure={HomePage:{menuName:"HomePage",default:!0,mainMenu:!0,moreMenu:!1,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_10__.S,isEmbedded:!1,Component:function HomePageComponent(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{children:"Home Page"})}},SecondPageComponent:{menuName:"SecondPageComponent",default:!1,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_11__.Y,isEmbedded:!1,Component:function SecondPageComponent(_ref){var _ref$name=_ref.name,name=void 0===_ref$name?"Not set":_ref$name;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h3",{children:"Second Page"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("hr",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("p",{children:["Parameter:Name = ",name]})]})},parameters:{name:"Second Page ðŸ˜€"}},MorePage1:{menuName:"MorePage1",default:!1,mainMenu:!1,moreMenu:!0,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_12__.V,isEmbedded:!1,Component:function MorePage1(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{children:"More Page 1"})}},MorePage2:{menuName:"MorePage2",mainMenu:!1,moreMenu:!0,Component:function MorePage2(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{children:"More Page 2"})}}};return(0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)((function(){titleState.setTitle("set"),appStructureState.set(AppStructure)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Parts.SkeletonLoader,{})})}.bind({});Set.args={};var AddNewMenu=function AddNewMenuTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppStructure(),MorePage1=function MorePage1(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{children:"Added More Page 1"})},AddMenu=function AddMenu(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{children:"Added Menu"})},AppStructure={HomePage:{menuName:"HomePage",default:!0,mainMenu:!0,moreMenu:!1,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_10__.S,isEmbedded:!1,Component:function HomePageComponent(){var appStructureState1=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppStructure();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h3",{children:"Add New Menu"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("p",{children:["AddMenu available: ",appStructureState1.isMenuAvailable("AddMenu").toString()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("hr",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){return function addNewMenu(){appStructureState1.addNewMenu("MorePage1",{menuName:"MorePage1",mainMenu:!1,moreMenu:!0,Component:MorePage1}),appStructureState1.addNewMenu("AddMenu",{menuName:"AddMenu",mainMenu:!0,moreMenu:!1,Component:AddMenu,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_12__.V})}()},children:"AddNewMenu"})]})}}};return(0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)((function(){titleState.setTitle("addNewMenu"),appStructureState.set(AppStructure)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Parts.SkeletonLoader,{})})}.bind({});AddNewMenu.args={};var DeleteNewMenu=function DeleteMenuTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppStructure(),AppStructure={HomePage:{menuName:"HomePage",default:!0,mainMenu:!0,moreMenu:!1,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_10__.S,isEmbedded:!1,Component:function HomePageComponent(){var appStructureState1=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppStructure();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("h3",{children:"Delte Menu"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)("p",{children:["MenuToDelete available: ",appStructureState1.isMenuAvailable("MenuToDelete").toString()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("hr",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("button",{onClick:function onClick(){return function deleteMenu(){appStructureState1.deleteMenu("MoreMenuToDelete"),appStructureState1.deleteMenu("MenuToDelete")}()},children:"DeleteMenu"})]})}},MoreMenuToDelete:{menuName:"MoreMenuToDelete",mainMenu:!1,moreMenu:!0,Component:function MoreMenuToDelete(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{children:"More Menu to delete"})}},MenuToDelete:{menuName:"MenuToDelete",mainMenu:!0,moreMenu:!1,Component:function MenuToDelete(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{children:"Menu to delete"})},menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_12__.V}};return(0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)((function(){titleState.setTitle("deleteMenu"),appStructureState.set(AppStructure)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Parts.SkeletonLoader,{})})}.bind({});DeleteNewMenu.args={};var EmbeddedMenu=function EmbeddedMenuTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Hooks.useAppStructure(),AppStructure={Embedded1:{menuName:"Embedded1",default:!0,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_13__.Z,isEmbedded:!0,embeddedLink:"/iframe.html?id=doc-app-skeleton--standard&globals=backgrounds.grid:false&viewMode=story"},Page1:{menuName:"Page1",Component:function Page1(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{children:"I'm Page1"})},menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_12__.V}};return(0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)((function(){titleState.setTitle("embedded"),appStructureState.set(AppStructure)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_8__.O.Parts.SkeletonLoader,{})})}.bind();EmbeddedMenu.args={},Set.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const HomePageComponent: FC<any> = () => {\n        return <div>Home Page</div>;\n    };\n\n    const SecondPageComponent: FC<any> = ({ name = 'Not set' }: any) => {\n        return (\n            <div>\n                <h3>Second Page</h3>\n                <hr />\n                <p>Parameter:Name = {name}</p>\n            </div>\n        );\n    };\n\n    const MorePage1: FC<any> = () => {\n        return <div>More Page 1</div>;\n    };\n\n    const MorePage2: FC<any> = () => {\n        return <div>More Page 2</div>;\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            mainMenu: true,\n            moreMenu: false,\n            menuIcon: Home,\n            isEmbedded: false,\n            Component: HomePageComponent,\n        },\n        SecondPageComponent: {\n            menuName: 'SecondPageComponent',\n            default: false,\n            menuIcon: NewWindow,\n            isEmbedded: false,\n            Component: SecondPageComponent,\n            parameters: { name: 'Second Page ðŸ˜€' },\n        },\n        MorePage1: {\n            menuName: 'MorePage1',\n            default: false,\n            mainMenu: false,\n            moreMenu: true,\n            menuIcon: ChapterAdd,\n            isEmbedded: false,\n            Component: MorePage1,\n        },\n        MorePage2: {\n            menuName: 'MorePage2',\n            mainMenu: false,\n            moreMenu: true,\n            Component: MorePage2,\n        },\n    };\n\n    useEffect(() => {\n        titleState.setTitle('set');\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},Set.parameters),AddNewMenu.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const MorePage1: FC<any> = () => {\n        return <div>Added More Page 1</div>;\n    };\n\n    const AddMenu: FC<any> = () => {\n        return <div>Added Menu</div>;\n    };\n\n    const HomePageComponent: FC<any> = () => {\n        const appStructureState1 = Skeleton.Hooks.useAppStructure();\n        const addNewMenu = () => {\n            appStructureState1.addNewMenu('MorePage1', {\n                menuName: 'MorePage1',\n                mainMenu: false,\n                moreMenu: true,\n                Component: MorePage1,\n            });\n            appStructureState1.addNewMenu('AddMenu', {\n                menuName: 'AddMenu',\n                mainMenu: true,\n                moreMenu: false,\n                Component: AddMenu,\n                menuIcon: ChapterAdd,\n            });\n        };\n        return (\n            <div>\n                <h3>Add New Menu</h3>\n                <p>AddMenu available: {appStructureState1.isMenuAvailable('AddMenu').toString()}</p>\n                <hr />\n                <button onClick={() => addNewMenu()}>AddNewMenu</button>\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            mainMenu: true,\n            moreMenu: false,\n            menuIcon: Home,\n            isEmbedded: false,\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        titleState.setTitle('addNewMenu');\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},AddNewMenu.parameters),DeleteNewMenu.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const MoreMenuToDelete: FC<any> = () => {\n        return <div>More Menu to delete</div>;\n    };\n\n    const MenuToDelete: FC<any> = () => {\n        return <div>Menu to delete</div>;\n    };\n\n    const HomePageComponent: FC<any> = () => {\n        const appStructureState1 = Skeleton.Hooks.useAppStructure();\n        const deleteMenu = () => {\n            appStructureState1.deleteMenu('MoreMenuToDelete');\n            appStructureState1.deleteMenu('MenuToDelete');\n        };\n        return (\n            <div>\n                <h3>Delte Menu</h3>\n                <p>MenuToDelete available: {appStructureState1.isMenuAvailable('MenuToDelete').toString()}</p>\n                <hr />\n                <button onClick={() => deleteMenu()}>DeleteMenu</button>\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            mainMenu: true,\n            moreMenu: false,\n            menuIcon: Home,\n            isEmbedded: false,\n            Component: HomePageComponent,\n        },\n        MoreMenuToDelete: {\n            menuName: 'MoreMenuToDelete',\n            mainMenu: false,\n            moreMenu: true,\n            Component: MoreMenuToDelete,\n        },\n        MenuToDelete: {\n            menuName: 'MenuToDelete',\n            mainMenu: true,\n            moreMenu: false,\n            Component: MenuToDelete,\n            menuIcon: ChapterAdd,\n        },\n    };\n\n    useEffect(() => {\n        titleState.setTitle('deleteMenu');\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},DeleteNewMenu.parameters),EmbeddedMenu.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const Page1: FC<any> = () => {\n        return <div>I'm Page1</div>;\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        Embedded1: {\n            menuName: 'Embedded1',\n            default: true,\n            menuIcon: Network,\n            isEmbedded: true,\n            embeddedLink: '/iframe.html?id=doc-app-skeleton--standard&globals=backgrounds.grid:false&viewMode=story',\n        },\n        Page1: {\n            menuName: 'Page1',\n            Component: Page1,\n            menuIcon: ChapterAdd,\n        },\n    };\n\n    useEffect(() => {\n        titleState.setTitle('embedded');\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},EmbeddedMenu.parameters)},"./stories/Hooks/useAppTitle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,useAppTitle:()=>useAppTitle});__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Home.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Hooks/useAppTitle",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O,argTypes:{},args:{},parameters:{storySource:{source:"import React, { FC, useEffect } from 'react';\nimport { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\nimport { Home } from 'grommet-icons';\n\nexport default {\n    title: 'Doc/Skeleton/Hooks/useAppTitle',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of hook:useAppTitle',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst SetTitleTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const title = 'setTitle/getTitle';\n\n    const HomePageComponent: FC<any> = () => {\n        const titleState1 = Skeleton.Hooks.useAppTitle();\n\n        const resetTitle = (): void => {\n            titleState.setTitle(title);\n        };\n\n        return (\n            <div>\n                <h3>useAppTitle</h3>\n                <p>Title: {titleState1.getTitle()}</p>\n                <hr />\n                <input\n                    type=\"text\"\n                    id=\"fname\"\n                    name=\"title\"\n                    onChange={(e) => titleState.setTitle(e.target.value)}\n                    value={titleState1.getTitle()}\n                />\n                <br />\n                <button onClick={() => resetTitle()}>ResetTitle</button>\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const useAppTitle = SetTitleTemplate.bind({});\nuseAppTitle.args = {};\n",locationsMap:{"use-app-title":{startLoc:{col:30,line:33},endLoc:{col:1,line:80},startBody:{col:30,line:33},endBody:{col:1,line:80}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Uh})]})},description:{component:"usage of hook:useAppTitle"}},layout:"fullscreen"}};var useAppTitle=function SetTitleTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppStructure(),title="setTitle/getTitle",AppStructure={HomePage:{menuName:"HomePage",default:!0,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_6__.S,Component:function HomePageComponent(){var titleState1=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppTitle();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h3",{children:"useAppTitle"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("p",{children:["Title: ",titleState1.getTitle()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("hr",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("input",{type:"text",id:"fname",name:"title",onChange:function onChange(e){return titleState.setTitle(e.target.value)},value:titleState1.getTitle()}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("br",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("button",{onClick:function onClick(){return function resetTitle(){titleState.setTitle(title)}()},children:"ResetTitle"})]})}}};return(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){appStructureState.set(AppStructure),titleState.setTitle(title)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Parts.SkeletonLoader,{})})}.bind({});useAppTitle.args={},useAppTitle.parameters=Object.assign({storySource:{source:'() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const title = \'setTitle/getTitle\';\n\n    const HomePageComponent: FC<any> = () => {\n        const titleState1 = Skeleton.Hooks.useAppTitle();\n\n        const resetTitle = (): void => {\n            titleState.setTitle(title);\n        };\n\n        return (\n            <div>\n                <h3>useAppTitle</h3>\n                <p>Title: {titleState1.getTitle()}</p>\n                <hr />\n                <input\n                    type="text"\n                    id="fname"\n                    name="title"\n                    onChange={(e) => titleState.setTitle(e.target.value)}\n                    value={titleState1.getTitle()}\n                />\n                <br />\n                <button onClick={() => resetTitle()}>ResetTitle</button>\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: \'HomePage\',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}'}},useAppTitle.parameters)},"./stories/Hooks/useAppType.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UseAppType:()=>UseAppType,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js");var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Hooks/useAppType",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O,argTypes:{},args:{},parameters:{storySource:{source:"import React, { useEffect } from 'react';\nimport { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\n\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\n\nexport default {\n    title: 'Doc/Skeleton/Hooks/useAppType',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of hook:useAppType',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst Template: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const appTypeState = Skeleton.Hooks.useAppType();\n\n    const title = 'setTitle/useAppType';\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        AppInfo: { ...{ default: true, mainMenu: true }, ...Skeleton.Components.DummyInfoStateComponentStructure },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n        appTypeState.setAppType('test');\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const UseAppType = Template.bind({});\nUseAppType.args = {};\n",locationsMap:{"use-app-type":{startLoc:{col:22,line:33},endLoc:{col:1,line:52},startBody:{col:22,line:33},endBody:{col:1,line:52}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Uh})]})},description:{component:"usage of hook:useAppType"}},layout:"fullscreen"}};var UseAppType=function Template(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppStructure(),appTypeState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppType(),AppStructure={AppInfo:Object.assign({},{default:!0,mainMenu:!0},_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Components.DummyInfoStateComponentStructure)};return(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){appStructureState.set(AppStructure),titleState.setTitle("setTitle/useAppType"),appTypeState.setAppType("test")}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Parts.SkeletonLoader,{})})}.bind({});UseAppType.args={},UseAppType.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const appTypeState = Skeleton.Hooks.useAppType();\n\n    const title = 'setTitle/useAppType';\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        AppInfo: { ...{ default: true, mainMenu: true }, ...Skeleton.Components.DummyInfoStateComponentStructure },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n        appTypeState.setAppType('test');\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},UseAppType.parameters)},"./stories/Hooks/useComponentFrameState.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,useComponentFrameState:()=>useComponentFrameState});__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),_storybook_addon_links__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),grommet__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/grommet/es6/components/Button/Button.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Hooks/useComponentFrameState",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_3__.O,argTypes:{},args:{},parameters:{storySource:{source:"import { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\nimport { linkTo } from '@storybook/addon-links';\nimport { Button } from 'grommet';\n\nexport default {\n    title: 'Doc/Skeleton/Hooks/useComponentFrameState',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of hook:useComponentFrameState',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst SetTitleTemplate: any = () => {\n    return (\n        <div>\n            <Button onClick={linkTo('Doc/Skeleton/Parts/ContentFrame')} plain>\n                <h3>GoTo Parts ContentFrame to see how to use</h3>\n            </Button>\n        </div>\n    );\n};\n\nexport const useComponentFrameState = SetTitleTemplate.bind({});\nuseComponentFrameState.args = {};\n",locationsMap:{"use-component-frame-state":{startLoc:{col:30,line:33},endLoc:{col:1,line:41},startBody:{col:30,line:33},endBody:{col:1,line:41}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.Uh})]})},description:{component:"usage of hook:useComponentFrameState"}},layout:"fullscreen"}};var SetTitleTemplate=function SetTitleTemplate(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_6__.z,{onClick:(0,_storybook_addon_links__WEBPACK_IMPORTED_MODULE_4__.kZ)("Doc/Skeleton/Parts/ContentFrame"),plain:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h3",{children:"GoTo Parts ContentFrame to see how to use"})})})};SetTitleTemplate.displayName="SetTitleTemplate";var useComponentFrameState=SetTitleTemplate.bind({});useComponentFrameState.args={},useComponentFrameState.parameters=Object.assign({storySource:{source:"() => {\n    return (\n        <div>\n            <Button onClick={linkTo('Doc/Skeleton/Parts/ContentFrame')} plain>\n                <h3>GoTo Parts ContentFrame to see how to use</h3>\n            </Button>\n        </div>\n    );\n}"}},useComponentFrameState.parameters)},"./stories/Hooks/useComponentHistory.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UseComponentHistory:()=>UseComponentHistory,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var react__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Home.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./node_modules/react/jsx-runtime.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Hooks/useComponentHistory",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O,argTypes:{},args:{},parameters:{storySource:{source:"import React, { FC, useEffect } from 'react';\nimport { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\nimport { Home } from 'grommet-icons';\n\nexport default {\n    title: 'Doc/Skeleton/Hooks/useComponentHistory',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of hook:useComponentHistory',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\nconst UseComponentHistoryTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const selectedComponent = Skeleton.Hooks.useSelectedComponent();\n    const historyState = Skeleton.Hooks.useComponentHistory();\n    const Comp = selectedComponent.getComponent().Component;\n\n    const HomePageComponent: FC<any> = () => {\n        return (\n            <div>\n                <h3>{selectedComponent.getMenuName()}</h3>\n                <hr />\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage_: {\n            menuName: 'HomePage !',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n        Page1_: {\n            menuName: 'Page1 !',\n            Component: HomePageComponent,\n        },\n        Page2_: {\n            menuName: 'Page2 !',\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return (\n        <>\n            {isReset ? (\n                <div style={{ padding: '20px' }}>\n                    <div>\n                        <button disabled={!historyState.hasBack()} onClick={() => historyState.back()}>\n                            {'<'}\n                        </button>\n                        <button disabled={!historyState.hasForward()} onClick={() => historyState.forward()}>\n                            {'>'}\n                        </button>\n                    </div>\n                    <div>{Comp ? <Comp /> : <div>Error</div>}</div>\n                    <div>\n                        {Object.entries(appStructureState.get()).map(([key, value]) => (\n                            <button\n                                key={key}\n                                onClick={() => selectedComponent.setSelectedComponent(key)}\n                                style={\n                                    selectedComponent.getComponent().menuName === value.menuName\n                                        ? { backgroundColor: 'black', color: 'white' }\n                                        : { backgroundColor: 'white', color: 'black' }\n                                }\n                            >\n                                {value.menuName}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n};\n\nexport const UseComponentHistory = UseComponentHistoryTemplate.bind({});\nUseComponentHistory.args = {};\n",locationsMap:{"use-component-history":{startLoc:{col:41,line:32},endLoc:{col:1,line:103},startBody:{col:41,line:32},endBody:{col:1,line:103}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.Uh})]})},description:{component:"usage of hook:useComponentHistory"}},layout:"fullscreen"}};var UseComponentHistory=function UseComponentHistoryTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.e.Hooks.useResetAll(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Hooks.useAppStructure(),selectedComponent=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Hooks.useSelectedComponent(),historyState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Hooks.useComponentHistory(),Comp=selectedComponent.getComponent().Component,HomePageComponent=function HomePageComponent(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("h3",{children:selectedComponent.getMenuName()}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("hr",{})]})},AppStructure={HomePage_:{menuName:"HomePage !",default:!0,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_19__.S,Component:HomePageComponent},Page1_:{menuName:"Page1 !",Component:HomePageComponent},Page2_:{menuName:"Page2 !",Component:HomePageComponent}};return(0,react__WEBPACK_IMPORTED_MODULE_15__.useEffect)((function(){appStructureState.set(AppStructure)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("div",{style:{padding:"20px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("button",{disabled:!historyState.hasBack(),onClick:function onClick(){return historyState.back()},children:"<"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("button",{disabled:!historyState.hasForward(),onClick:function onClick(){return historyState.forward()},children:">"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("div",{children:Comp?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(Comp,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("div",{children:"Error"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("div",{children:Object.entries(appStructureState.get()).map((function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("button",{onClick:function onClick(){return selectedComponent.setSelectedComponent(key)},style:selectedComponent.getComponent().menuName===value.menuName?{backgroundColor:"black",color:"white"}:{backgroundColor:"white",color:"black"},children:value.menuName},key)}))})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Parts.SkeletonLoader,{})})}.bind({});UseComponentHistory.args={},UseComponentHistory.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const selectedComponent = Skeleton.Hooks.useSelectedComponent();\n    const historyState = Skeleton.Hooks.useComponentHistory();\n    const Comp = selectedComponent.getComponent().Component;\n\n    const HomePageComponent: FC<any> = () => {\n        return (\n            <div>\n                <h3>{selectedComponent.getMenuName()}</h3>\n                <hr />\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage_: {\n            menuName: 'HomePage !',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n        Page1_: {\n            menuName: 'Page1 !',\n            Component: HomePageComponent,\n        },\n        Page2_: {\n            menuName: 'Page2 !',\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return (\n        <>\n            {isReset ? (\n                <div style={{ padding: '20px' }}>\n                    <div>\n                        <button disabled={!historyState.hasBack()} onClick={() => historyState.back()}>\n                            {'<'}\n                        </button>\n                        <button disabled={!historyState.hasForward()} onClick={() => historyState.forward()}>\n                            {'>'}\n                        </button>\n                    </div>\n                    <div>{Comp ? <Comp /> : <div>Error</div>}</div>\n                    <div>\n                        {Object.entries(appStructureState.get()).map(([key, value]) => (\n                            <button\n                                key={key}\n                                onClick={() => selectedComponent.setSelectedComponent(key)}\n                                style={\n                                    selectedComponent.getComponent().menuName === value.menuName\n                                        ? { backgroundColor: 'black', color: 'white' }\n                                        : { backgroundColor: 'white', color: 'black' }\n                                }\n                            >\n                                {value.menuName}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n}"}},UseComponentHistory.parameters)},"./stories/Hooks/useGrommetTheme.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{customTheme:()=>customTheme,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Home.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Hooks/useGrommetTheme",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O,argTypes:{},args:{},parameters:{storySource:{source:"import React, { FC, useEffect } from 'react';\nimport { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\nimport { Home } from 'grommet-icons';\n\nexport default {\n    title: 'Doc/Skeleton/Hooks/useGrommetTheme',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of hook:useGrommetTheme',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst customThemeTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const grommetThemeState = Skeleton.Hooks.useGrommetTheme();\n\n    const title = 'setTitle/useGrommetTheme';\n\n    const HomePage: FC<any> = () => {\n        return <div>Custom Theme</div>;\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            menuIcon: Home,\n            Component: HomePage,\n        },\n    };\n\n    const custTheme = {\n        global: {\n            colors: {\n                'dark-1': { dark: '#112342', light: '#ee3452' },\n                brand: {\n                    dark: '#ff3344',\n                    light: '#3f42f3',\n                },\n            },\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n        grommetThemeState.setGrommetTheme(custTheme);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const customTheme = customThemeTemplate.bind({});\ncustomTheme.args = {};\n",locationsMap:{"custom-theme":{startLoc:{col:33,line:33},endLoc:{col:1,line:73},startBody:{col:33,line:33},endBody:{col:1,line:73}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Uh})]})},description:{component:"usage of hook:useGrommetTheme"}},layout:"fullscreen"}};var customTheme=function customThemeTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppStructure(),grommetThemeState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useGrommetTheme(),AppStructure={HomePage:{menuName:"HomePage",default:!0,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_6__.S,Component:function HomePage(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{children:"Custom Theme"})}}},custTheme={global:{colors:{"dark-1":{dark:"#112342",light:"#ee3452"},brand:{dark:"#ff3344",light:"#3f42f3"}}}};return(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){appStructureState.set(AppStructure),titleState.setTitle("setTitle/useGrommetTheme"),grommetThemeState.setGrommetTheme(custTheme)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Parts.SkeletonLoader,{})})}.bind({});customTheme.args={},customTheme.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const grommetThemeState = Skeleton.Hooks.useGrommetTheme();\n\n    const title = 'setTitle/useGrommetTheme';\n\n    const HomePage: FC<any> = () => {\n        return <div>Custom Theme</div>;\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            menuIcon: Home,\n            Component: HomePage,\n        },\n    };\n\n    const custTheme = {\n        global: {\n            colors: {\n                'dark-1': { dark: '#112342', light: '#ee3452' },\n                brand: {\n                    dark: '#ff3344',\n                    light: '#3f42f3',\n                },\n            },\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n        grommetThemeState.setGrommetTheme(custTheme);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},customTheme.parameters)},"./stories/Hooks/useMessages.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UseMessages:()=>UseMessages,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),react__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./node_modules/react/index.js"),grommet__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__("./node_modules/grommet/es6/components/Box/Box.js"),grommet__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__("./node_modules/grommet/es6/components/Heading/Heading.js"),grommet__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__("./node_modules/grommet/es6/components/Text/Text.js"),grommet__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__("./node_modules/grommet/es6/components/Header/Header.js"),grommet__WEBPACK_IMPORTED_MODULE_30__=__webpack_require__("./node_modules/grommet/es6/components/Main/Main.js"),grommet__WEBPACK_IMPORTED_MODULE_31__=__webpack_require__("./node_modules/grommet/es6/components/Table/Table.js"),grommet__WEBPACK_IMPORTED_MODULE_32__=__webpack_require__("./node_modules/grommet/es6/components/TableHeader/TableHeader.js"),grommet__WEBPACK_IMPORTED_MODULE_33__=__webpack_require__("./node_modules/grommet/es6/components/TableRow/TableRow.js"),grommet__WEBPACK_IMPORTED_MODULE_34__=__webpack_require__("./node_modules/grommet/es6/components/TableCell/TableCell.js"),grommet__WEBPACK_IMPORTED_MODULE_35__=__webpack_require__("./node_modules/grommet/es6/components/TableBody/TableBody.js"),grommet__WEBPACK_IMPORTED_MODULE_36__=__webpack_require__("./node_modules/grommet/es6/components/TextInput/TextInput.js"),grommet__WEBPACK_IMPORTED_MODULE_37__=__webpack_require__("./node_modules/grommet/es6/components/CheckBox/CheckBox.js"),grommet__WEBPACK_IMPORTED_MODULE_38__=__webpack_require__("./node_modules/grommet/es6/components/Select/Select.js"),grommet__WEBPACK_IMPORTED_MODULE_39__=__webpack_require__("./node_modules/grommet/es6/components/Button/Button.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__("./node_modules/grommet-icons/es6/icons/CaretRightFill.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__("./node_modules/grommet-icons/es6/icons/CaretDownFill.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__("./node_modules/grommet-icons/es6/icons/View.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__("./node_modules/grommet-icons/es6/icons/FormTrash.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_29__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Trash.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_40__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Add.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__("./node_modules/react/jsx-runtime.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Hooks/useMessages",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_18__.O,argTypes:{},args:{},parameters:{storySource:{source:'import { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from \'@storybook/addon-docs\';\nimport { Skeleton, Test } from \'@swissglider/react_skeleton_framework\';\nimport { useState } from \'react\';\nimport {\n    Box,\n    Button,\n    CheckBox,\n    Header,\n    Heading,\n    Main,\n    Select,\n    Table,\n    TableBody,\n    TableCell,\n    TableHeader,\n    TableRow,\n    Text,\n    TextInput,\n} from \'grommet\';\nimport { CaretDownFill, CaretRightFill, Trash, View, Add, FormTrash } from \'grommet-icons\';\n\nexport default {\n    title: \'Doc/Skeleton/Hooks/useMessages\',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: \'usage of hook:useMessages\',\n            },\n        },\n        layout: \'fullscreen\',\n    },\n};\n\nconst colorMap: any = {\n    info: \'neutral-3\',\n    success: \'status-ok\',\n    warning: \'status-warning\',\n    critical: \'status-critical\',\n    error: \'accent-2\',\n};\n\nconst MessageTestTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const messageState = Skeleton.Hooks.useMessages();\n    const [newMsgTitel, setNewMsgTitle] = useState<string>(\'\');\n    const [newMsgMessage, setNewMsgMessage] = useState<string>(\'\');\n    const [newPopUpOnSkeleton, setNewPopUpOnSkeleton] = useState<boolean>(false);\n    const severity = [\'info\', \'success\', \'warning\', \'critical\', \'error\'];\n    const [newSeverity, setNewSeverity] = useState<typeof severity[number]>(\'info\');\n    const severityAddMessageFn: Record<typeof severity[number], any> = {\n        info: messageState.addInfo,\n        success: messageState.addSuccess,\n        warning: messageState.addWarning,\n        critical: messageState.addCritical,\n        error: messageState.addError,\n    };\n    const [selectedMsg, setSelectedMsg] = useState<Skeleton.Types.T_AppMessage | undefined>(undefined);\n    const [sowCounts, setSowCounts] = useState<boolean>(false);\n    const title = \'Play with Messages - useMessages\';\n\n    const addNewMessage = () => {\n        if (newSeverity === \'error\') {\n            messageState.addError(newMsgTitel, newMsgMessage, new Error(newMsgMessage), newPopUpOnSkeleton);\n        } else {\n            severityAddMessageFn[newSeverity](newMsgTitel, newMsgMessage, newPopUpOnSkeleton);\n        }\n    };\n\n    return (\n        <>\n            {isReset ? (\n                <Box margin="small">\n                    <Heading level={2}>{title}</Heading>\n                    <Box margin={{ vertical: \'small\' }}>\n                        <Box direction="row" background="light-4" pad="small">\n                            <Text>Counts</Text>\n                            {!sowCounts ? (\n                                <CaretRightFill onClick={() => setSowCounts(true)} />\n                            ) : (\n                                <CaretDownFill onClick={() => setSowCounts(false)} />\n                            )}\n                        </Box>\n                        {sowCounts && (\n                            <Box pad="small" background="accent-4">\n                                <Text>Count of Messages: {messageState.getCount()}</Text>\n                                <Text>Count of unreaded Messages: {messageState.getNewCount()}</Text>\n                                <Text>Count of readed Messages: {messageState.getReadedCount()}</Text>\n                                <Text>\n                                    Count of with PopUp Messages:{\' \'}\n                                    {messageState.get().filter((e) => e.popUpOnSkeleton).length}\n                                </Text>\n                                <Text>Count of Info Messages: {messageState.getInfo().length}</Text>\n                                <Text>Count of Success Messages: {messageState.getSuccess().length}</Text>\n                                <Text>Count of Warning Messages: {messageState.getWarning().length}</Text>\n                                <Text>Count of Critical Messages: {messageState.getCritical().length}</Text>\n                                <Text>Count of Error Messages: {messageState.getError().length}</Text>\n                            </Box>\n                        )}\n                    </Box>\n\n                    <Box pad="small" background="light-5">\n                        <Box margin={{ vertical: \'small\' }}>\n                            <Text>\n                                Selected Message:{\' \'}\n                                {!(selectedMsg && messageState.isMessageAvailable(selectedMsg.time)) && \'none\'}\n                            </Text>\n                        </Box>\n\n                        {selectedMsg && messageState.isMessageAvailable(selectedMsg.time) && (\n                            <Box direction="row" justify="stretch" wrap gap="small">\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Time:</Text>\n                                    <Text weight="bold">{`${new Date(\n                                        selectedMsg.time,\n                                    ).toLocaleTimeString()} : ${new Date(\n                                        selectedMsg.time,\n                                    ).toLocaleDateString()}`}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Titel:</Text>\n                                    <Text weight="bold">{selectedMsg.msgTitle}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Message:</Text>\n                                    <Text weight="bold">{selectedMsg.msgMessage}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Severity:</Text>\n                                    <Text weight="bold">{selectedMsg.severity}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>MSG-Error:</Text>\n                                    <Text weight="bold">{selectedMsg.msgError?.message}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Is PopUp:</Text>\n                                    <Text weight="bold">{selectedMsg.popUpOnSkeleton?.toString()}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Is Unreaded:</Text>\n                                    <Text weight="bold">{messageState.isMsgNew(selectedMsg.time)?.toString()}</Text>\n                                </Box>\n                            </Box>\n                        )}\n                    </Box>\n                    <Box margin={{ vertical: \'small\' }} border={true}>\n                        <Header pad="small" background={\'dark-1\'}>\n                            <Box direction="row">All messages: {messageState.getCount()}</Box>\n                            <Box direction="row" gap="small">\n                                <View onClick={() => messageState.setAllReaded()} />\n                                <FormTrash onClick={() => messageState.deleteAllReaded()} />\n                                <Trash onClick={() => messageState.deleteAll()} />\n                            </Box>\n                        </Header>\n                        <Main pad="xsmall" height={{ min: \'150px\' }}>\n                            {messageState.getCount() > 0 && (\n                                <Table>\n                                    <TableHeader>\n                                        <TableRow>\n                                            <TableCell scope="col" border="bottom">\n                                                Time\n                                            </TableCell>\n                                            <TableCell scope="col" border="bottom">\n                                                Title\n                                            </TableCell>\n                                            <TableCell scope="col" border="bottom">\n                                                Severity\n                                            </TableCell>\n                                            <TableCell scope="col" border="bottom">\n                                                Unreaded/Readed\n                                            </TableCell>\n                                            <TableCell scope="col" border="bottom">\n                                                PopUp\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHeader>\n                                    <TableBody>\n                                        {messageState.get().map((msg) => (\n                                            <TableRow\n                                                key={Skeleton.Helpers.getRandomString()}\n                                                onClick={() => setSelectedMsg({ ...msg })}\n                                            >\n                                                <TableCell scope="row">\n                                                    <Text color={colorMap[msg.severity]} size="small">{`${new Date(\n                                                        msg.time,\n                                                    ).toLocaleTimeString()} : ${new Date(\n                                                        msg.time,\n                                                    ).toLocaleDateString()}`}</Text>\n                                                </TableCell>\n                                                <TableCell scope="row">\n                                                    <Text color={colorMap[msg.severity]} size="small">\n                                                        {msg.msgTitle}\n                                                    </Text>\n                                                </TableCell>\n                                                <TableCell scope="row">\n                                                    <Text color={colorMap[msg.severity]} size="small">\n                                                        {msg.severity}\n                                                    </Text>\n                                                </TableCell>\n                                                <TableCell scope="row">\n                                                    {messageState.isMsgNew(msg.time) ? (\n                                                        <View\n                                                            size="small"\n                                                            color={colorMap[msg.severity]}\n                                                            onClick={() => messageState.setAsReaded(msg.time)}\n                                                        />\n                                                    ) : (\n                                                        <Trash\n                                                            size="small"\n                                                            color={colorMap[msg.severity]}\n                                                            onClick={() => messageState.deleteMsg(msg.time)}\n                                                        />\n                                                    )}\n                                                </TableCell>\n                                                <TableCell scope="row">\n                                                    <Text color={colorMap[msg.severity]} size="small">\n                                                        {msg.popUpOnSkeleton?.toString()}\n                                                    </Text>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            )}\n                        </Main>\n                    </Box>\n                    <Box pad="xsmall" background="light-5">\n                        <Box margin={{ vertical: \'small\' }}>\n                            <Text>Add new Message:</Text>\n                        </Box>\n                        <Box direction="row" justify="stretch" wrap gap="small">\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Text>Titel:</Text>\n                                <TextInput\n                                    value={newMsgTitel}\n                                    onChange={(event) => setNewMsgTitle(event.target.value)}\n                                />\n                            </Box>\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Text>Message:</Text>\n                                <TextInput\n                                    value={newMsgMessage}\n                                    onChange={(event) => setNewMsgMessage(event.target.value)}\n                                />\n                            </Box>\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Text>PopUp:</Text>\n                                <CheckBox\n                                    checked={newPopUpOnSkeleton}\n                                    onChange={(event) => setNewPopUpOnSkeleton(event.target.checked)}\n                                />\n                            </Box>\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Text>Select Severity:</Text>\n                                <Select\n                                    size="small"\n                                    options={severity}\n                                    value={newSeverity}\n                                    onChange={({ option }) => setNewSeverity(option)}\n                                />\n                            </Box>\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Button\n                                    margin={{ vertical: \'xxsmall\' }}\n                                    color="dark-3"\n                                    icon={<Add size="small" />}\n                                    onClick={() => addNewMessage()}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n};\n\nexport const UseMessages = MessageTestTemplate.bind({});\nUseMessages.args = {};\n',locationsMap:{"use-messages":{startLoc:{col:33,line:57},endLoc:{col:1,line:382},startBody:{col:33,line:57},endBody:{col:1,line:382}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_17__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_17__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_17__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_17__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_17__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_17__.Uh})]})},description:{component:"usage of hook:useMessages"}},layout:"fullscreen"}};var colorMap={info:"neutral-3",success:"status-ok",warning:"status-warning",critical:"status-critical",error:"accent-2"},UseMessages=function MessageTestTemplate(){var _selectedMsg$msgError,_selectedMsg$popUpOnS,_messageState$isMsgNe,isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_18__.e.Hooks.useResetAll(),messageState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_18__.O.Hooks.useMessages(),_useState2=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_19__.useState)(""),2),newMsgTitel=_useState2[0],setNewMsgTitle=_useState2[1],_useState4=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_19__.useState)(""),2),newMsgMessage=_useState4[0],setNewMsgMessage=_useState4[1],_useState6=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_19__.useState)(!1),2),newPopUpOnSkeleton=_useState6[0],setNewPopUpOnSkeleton=_useState6[1],_useState8=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_19__.useState)("info"),2),newSeverity=_useState8[0],setNewSeverity=_useState8[1],severityAddMessageFn={info:messageState.addInfo,success:messageState.addSuccess,warning:messageState.addWarning,critical:messageState.addCritical,error:messageState.addError},_useState10=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_19__.useState)(void 0),2),selectedMsg=_useState10[0],setSelectedMsg=_useState10[1],_useState12=_slicedToArray((0,react__WEBPACK_IMPORTED_MODULE_19__.useState)(!1),2),sowCounts=_useState12[0],setSowCounts=_useState12[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{margin:"small",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_22__.X,{level:2,children:"Play with Messages - useMessages"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{margin:{vertical:"small"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{direction:"row",background:"light-4",pad:"small",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Counts"}),sowCounts?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet_icons__WEBPACK_IMPORTED_MODULE_25__.H,{onClick:function onClick(){return setSowCounts(!1)}}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet_icons__WEBPACK_IMPORTED_MODULE_24__.$,{onClick:function onClick(){return setSowCounts(!0)}})]}),sowCounts&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{pad:"small",background:"accent-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of Messages: ",messageState.getCount()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of unreaded Messages: ",messageState.getNewCount()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of readed Messages: ",messageState.getReadedCount()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of with PopUp Messages:"," ",messageState.get().filter((function(e){return e.popUpOnSkeleton})).length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of Info Messages: ",messageState.getInfo().length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of Success Messages: ",messageState.getSuccess().length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of Warning Messages: ",messageState.getWarning().length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of Critical Messages: ",messageState.getCritical().length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Count of Error Messages: ",messageState.getError().length]})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{pad:"small",background:"light-5",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{margin:{vertical:"small"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:["Selected Message:"," ",!(selectedMsg&&messageState.isMessageAvailable(selectedMsg.time))&&"none"]})}),selectedMsg&&messageState.isMessageAvailable(selectedMsg.time)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{direction:"row",justify:"stretch",wrap:!0,gap:"small",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Time:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{weight:"bold",children:new Date(selectedMsg.time).toLocaleTimeString()+" : "+new Date(selectedMsg.time).toLocaleDateString()})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Titel:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{weight:"bold",children:selectedMsg.msgTitle})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Message:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{weight:"bold",children:selectedMsg.msgMessage})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Severity:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{weight:"bold",children:selectedMsg.severity})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"MSG-Error:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{weight:"bold",children:null===(_selectedMsg$msgError=selectedMsg.msgError)||void 0===_selectedMsg$msgError?void 0:_selectedMsg$msgError.message})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Is PopUp:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{weight:"bold",children:null===(_selectedMsg$popUpOnS=selectedMsg.popUpOnSkeleton)||void 0===_selectedMsg$popUpOnS?void 0:_selectedMsg$popUpOnS.toString()})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Is Unreaded:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{weight:"bold",children:null===(_messageState$isMsgNe=messageState.isMsgNew(selectedMsg.time))||void 0===_messageState$isMsgNe?void 0:_messageState$isMsgNe.toString()})]})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{margin:{vertical:"small"},border:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_26__.h,{pad:"small",background:"dark-1",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{direction:"row",children:["All messages: ",messageState.getCount()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{direction:"row",gap:"small",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet_icons__WEBPACK_IMPORTED_MODULE_27__.G,{onClick:function onClick(){return messageState.setAllReaded()}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet_icons__WEBPACK_IMPORTED_MODULE_28__.D,{onClick:function onClick(){return messageState.deleteAllReaded()}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet_icons__WEBPACK_IMPORTED_MODULE_29__.r,{onClick:function onClick(){return messageState.deleteAll()}})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_30__.o,{pad:"xsmall",height:{min:"150px"},children:messageState.getCount()>0&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_31__.i,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_32__.x,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_33__.S,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"col",border:"bottom",children:"Time"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"col",border:"bottom",children:"Title"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"col",border:"bottom",children:"Severity"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"col",border:"bottom",children:"Unreaded/Readed"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"col",border:"bottom",children:"PopUp"})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_35__.R,{children:messageState.get().map((function(msg){var _msg$popUpOnSkeleton;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_33__.S,{onClick:function onClick(){return setSelectedMsg(Object.assign({},msg))},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"row",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{color:colorMap[msg.severity],size:"small",children:new Date(msg.time).toLocaleTimeString()+" : "+new Date(msg.time).toLocaleDateString()})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"row",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{color:colorMap[msg.severity],size:"small",children:msg.msgTitle})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"row",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{color:colorMap[msg.severity],size:"small",children:msg.severity})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"row",children:messageState.isMsgNew(msg.time)?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet_icons__WEBPACK_IMPORTED_MODULE_27__.G,{size:"small",color:colorMap[msg.severity],onClick:function onClick(){return messageState.setAsReaded(msg.time)}}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet_icons__WEBPACK_IMPORTED_MODULE_29__.r,{size:"small",color:colorMap[msg.severity],onClick:function onClick(){return messageState.deleteMsg(msg.time)}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_34__.p,{scope:"row",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{color:colorMap[msg.severity],size:"small",children:null===(_msg$popUpOnSkeleton=msg.popUpOnSkeleton)||void 0===_msg$popUpOnSkeleton?void 0:_msg$popUpOnSkeleton.toString()})})]},_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_18__.O.Helpers.getRandomString())}))})]})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{pad:"xsmall",background:"light-5",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{margin:{vertical:"small"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Add new Message:"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{direction:"row",justify:"stretch",wrap:!0,gap:"small",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",align:"center",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Titel:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_36__.o,{value:newMsgTitel,onChange:function onChange(event){return setNewMsgTitle(event.target.value)}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",align:"center",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Message:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_36__.o,{value:newMsgMessage,onChange:function onChange(event){return setNewMsgMessage(event.target.value)}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",align:"center",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"PopUp:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_37__.J,{checked:newPopUpOnSkeleton,onChange:function onChange(event){return setNewPopUpOnSkeleton(event.target.checked)}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",align:"center",margin:{vertical:"xxsmall"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_23__.x,{children:"Select Severity:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_38__.P,{size:"small",options:["info","success","warning","critical","error"],value:newSeverity,onChange:function onChange(_ref){var option=_ref.option;return setNewSeverity(option)}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_21__.x,{background:"light-1",direction:"row",pad:"xsmall",round:"xsmall",gap:"xsmall",align:"center",margin:{vertical:"xxsmall"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_39__.z,{margin:{vertical:"xxsmall"},color:"dark-3",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(grommet_icons__WEBPACK_IMPORTED_MODULE_40__.m,{size:"small"}),onClick:function onClick(){return function addNewMessage(){"error"===newSeverity?messageState.addError(newMsgTitel,newMsgMessage,new Error(newMsgMessage),newPopUpOnSkeleton):severityAddMessageFn[newSeverity](newMsgTitel,newMsgMessage,newPopUpOnSkeleton)}()}})})]})]})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_20__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_18__.O.Parts.SkeletonLoader,{})})}.bind({});UseMessages.args={},UseMessages.parameters=Object.assign({storySource:{source:'() => {\n    const isReset = Test.Hooks.useResetAll();\n    const messageState = Skeleton.Hooks.useMessages();\n    const [newMsgTitel, setNewMsgTitle] = useState<string>(\'\');\n    const [newMsgMessage, setNewMsgMessage] = useState<string>(\'\');\n    const [newPopUpOnSkeleton, setNewPopUpOnSkeleton] = useState<boolean>(false);\n    const severity = [\'info\', \'success\', \'warning\', \'critical\', \'error\'];\n    const [newSeverity, setNewSeverity] = useState<typeof severity[number]>(\'info\');\n    const severityAddMessageFn: Record<typeof severity[number], any> = {\n        info: messageState.addInfo,\n        success: messageState.addSuccess,\n        warning: messageState.addWarning,\n        critical: messageState.addCritical,\n        error: messageState.addError,\n    };\n    const [selectedMsg, setSelectedMsg] = useState<Skeleton.Types.T_AppMessage | undefined>(undefined);\n    const [sowCounts, setSowCounts] = useState<boolean>(false);\n    const title = \'Play with Messages - useMessages\';\n\n    const addNewMessage = () => {\n        if (newSeverity === \'error\') {\n            messageState.addError(newMsgTitel, newMsgMessage, new Error(newMsgMessage), newPopUpOnSkeleton);\n        } else {\n            severityAddMessageFn[newSeverity](newMsgTitel, newMsgMessage, newPopUpOnSkeleton);\n        }\n    };\n\n    return (\n        <>\n            {isReset ? (\n                <Box margin="small">\n                    <Heading level={2}>{title}</Heading>\n                    <Box margin={{ vertical: \'small\' }}>\n                        <Box direction="row" background="light-4" pad="small">\n                            <Text>Counts</Text>\n                            {!sowCounts ? (\n                                <CaretRightFill onClick={() => setSowCounts(true)} />\n                            ) : (\n                                <CaretDownFill onClick={() => setSowCounts(false)} />\n                            )}\n                        </Box>\n                        {sowCounts && (\n                            <Box pad="small" background="accent-4">\n                                <Text>Count of Messages: {messageState.getCount()}</Text>\n                                <Text>Count of unreaded Messages: {messageState.getNewCount()}</Text>\n                                <Text>Count of readed Messages: {messageState.getReadedCount()}</Text>\n                                <Text>\n                                    Count of with PopUp Messages:{\' \'}\n                                    {messageState.get().filter((e) => e.popUpOnSkeleton).length}\n                                </Text>\n                                <Text>Count of Info Messages: {messageState.getInfo().length}</Text>\n                                <Text>Count of Success Messages: {messageState.getSuccess().length}</Text>\n                                <Text>Count of Warning Messages: {messageState.getWarning().length}</Text>\n                                <Text>Count of Critical Messages: {messageState.getCritical().length}</Text>\n                                <Text>Count of Error Messages: {messageState.getError().length}</Text>\n                            </Box>\n                        )}\n                    </Box>\n\n                    <Box pad="small" background="light-5">\n                        <Box margin={{ vertical: \'small\' }}>\n                            <Text>\n                                Selected Message:{\' \'}\n                                {!(selectedMsg && messageState.isMessageAvailable(selectedMsg.time)) && \'none\'}\n                            </Text>\n                        </Box>\n\n                        {selectedMsg && messageState.isMessageAvailable(selectedMsg.time) && (\n                            <Box direction="row" justify="stretch" wrap gap="small">\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Time:</Text>\n                                    <Text weight="bold">{`${new Date(\n                                        selectedMsg.time,\n                                    ).toLocaleTimeString()} : ${new Date(\n                                        selectedMsg.time,\n                                    ).toLocaleDateString()}`}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Titel:</Text>\n                                    <Text weight="bold">{selectedMsg.msgTitle}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Message:</Text>\n                                    <Text weight="bold">{selectedMsg.msgMessage}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Severity:</Text>\n                                    <Text weight="bold">{selectedMsg.severity}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>MSG-Error:</Text>\n                                    <Text weight="bold">{selectedMsg.msgError?.message}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Is PopUp:</Text>\n                                    <Text weight="bold">{selectedMsg.popUpOnSkeleton?.toString()}</Text>\n                                </Box>\n                                <Box\n                                    background="light-1"\n                                    direction="row"\n                                    pad="xsmall"\n                                    round="xsmall"\n                                    gap="xsmall"\n                                    margin={{ vertical: \'xxsmall\' }}\n                                >\n                                    <Text>Is Unreaded:</Text>\n                                    <Text weight="bold">{messageState.isMsgNew(selectedMsg.time)?.toString()}</Text>\n                                </Box>\n                            </Box>\n                        )}\n                    </Box>\n                    <Box margin={{ vertical: \'small\' }} border={true}>\n                        <Header pad="small" background={\'dark-1\'}>\n                            <Box direction="row">All messages: {messageState.getCount()}</Box>\n                            <Box direction="row" gap="small">\n                                <View onClick={() => messageState.setAllReaded()} />\n                                <FormTrash onClick={() => messageState.deleteAllReaded()} />\n                                <Trash onClick={() => messageState.deleteAll()} />\n                            </Box>\n                        </Header>\n                        <Main pad="xsmall" height={{ min: \'150px\' }}>\n                            {messageState.getCount() > 0 && (\n                                <Table>\n                                    <TableHeader>\n                                        <TableRow>\n                                            <TableCell scope="col" border="bottom">\n                                                Time\n                                            </TableCell>\n                                            <TableCell scope="col" border="bottom">\n                                                Title\n                                            </TableCell>\n                                            <TableCell scope="col" border="bottom">\n                                                Severity\n                                            </TableCell>\n                                            <TableCell scope="col" border="bottom">\n                                                Unreaded/Readed\n                                            </TableCell>\n                                            <TableCell scope="col" border="bottom">\n                                                PopUp\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHeader>\n                                    <TableBody>\n                                        {messageState.get().map((msg) => (\n                                            <TableRow\n                                                key={Skeleton.Helpers.getRandomString()}\n                                                onClick={() => setSelectedMsg({ ...msg })}\n                                            >\n                                                <TableCell scope="row">\n                                                    <Text color={colorMap[msg.severity]} size="small">{`${new Date(\n                                                        msg.time,\n                                                    ).toLocaleTimeString()} : ${new Date(\n                                                        msg.time,\n                                                    ).toLocaleDateString()}`}</Text>\n                                                </TableCell>\n                                                <TableCell scope="row">\n                                                    <Text color={colorMap[msg.severity]} size="small">\n                                                        {msg.msgTitle}\n                                                    </Text>\n                                                </TableCell>\n                                                <TableCell scope="row">\n                                                    <Text color={colorMap[msg.severity]} size="small">\n                                                        {msg.severity}\n                                                    </Text>\n                                                </TableCell>\n                                                <TableCell scope="row">\n                                                    {messageState.isMsgNew(msg.time) ? (\n                                                        <View\n                                                            size="small"\n                                                            color={colorMap[msg.severity]}\n                                                            onClick={() => messageState.setAsReaded(msg.time)}\n                                                        />\n                                                    ) : (\n                                                        <Trash\n                                                            size="small"\n                                                            color={colorMap[msg.severity]}\n                                                            onClick={() => messageState.deleteMsg(msg.time)}\n                                                        />\n                                                    )}\n                                                </TableCell>\n                                                <TableCell scope="row">\n                                                    <Text color={colorMap[msg.severity]} size="small">\n                                                        {msg.popUpOnSkeleton?.toString()}\n                                                    </Text>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            )}\n                        </Main>\n                    </Box>\n                    <Box pad="xsmall" background="light-5">\n                        <Box margin={{ vertical: \'small\' }}>\n                            <Text>Add new Message:</Text>\n                        </Box>\n                        <Box direction="row" justify="stretch" wrap gap="small">\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Text>Titel:</Text>\n                                <TextInput\n                                    value={newMsgTitel}\n                                    onChange={(event) => setNewMsgTitle(event.target.value)}\n                                />\n                            </Box>\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Text>Message:</Text>\n                                <TextInput\n                                    value={newMsgMessage}\n                                    onChange={(event) => setNewMsgMessage(event.target.value)}\n                                />\n                            </Box>\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Text>PopUp:</Text>\n                                <CheckBox\n                                    checked={newPopUpOnSkeleton}\n                                    onChange={(event) => setNewPopUpOnSkeleton(event.target.checked)}\n                                />\n                            </Box>\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Text>Select Severity:</Text>\n                                <Select\n                                    size="small"\n                                    options={severity}\n                                    value={newSeverity}\n                                    onChange={({ option }) => setNewSeverity(option)}\n                                />\n                            </Box>\n                            <Box\n                                background="light-1"\n                                direction="row"\n                                pad="xsmall"\n                                round="xsmall"\n                                gap="xsmall"\n                                align="center"\n                                margin={{ vertical: \'xxsmall\' }}\n                            >\n                                <Button\n                                    margin={{ vertical: \'xxsmall\' }}\n                                    color="dark-3"\n                                    icon={<Add size="small" />}\n                                    onClick={() => addNewMessage()}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n}'}},UseMessages.parameters)},"./stories/Hooks/useSelectedComponent.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GetComponent:()=>GetComponent,GetMenuAndMenustructName:()=>GetMenuAndMenustructName,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var react__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Home.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./node_modules/react/jsx-runtime.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Hooks/useSelectedComponent",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O,argTypes:{},args:{},parameters:{storySource:{source:"import React, { FC, useEffect } from 'react';\nimport { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\nimport { Home } from 'grommet-icons';\n\nexport default {\n    title: 'Doc/Skeleton/Hooks/useSelectedComponent',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of hook:useSelectedComponent',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst GetMenuMenustructNameTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const title = 'getMenuName';\n\n    const HomePageComponent: FC<any> = () => {\n        const selectedComponent = Skeleton.Hooks.useSelectedComponent();\n\n        return (\n            <div>\n                <h3>getMenuName</h3>\n                <p>Selected Menu Name: {selectedComponent.getMenuName()}</p>\n                <h3>getMenuStructName</h3>\n                <p>Selected Menu Struct Name: {selectedComponent.getMenuStructName()}</p>\n                <hr />\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage_: {\n            menuName: 'HomePage !',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n        Page1_: {\n            menuName: 'Page1 !',\n            Component: HomePageComponent,\n        },\n        Page2_: {\n            menuName: 'Page2 !',\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const GetMenuAndMenustructName = GetMenuMenustructNameTemplate.bind({});\nGetMenuAndMenustructName.args = {};\n\nconst GetComponentTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const selectedComponent = Skeleton.Hooks.useSelectedComponent();\n    const Comp = selectedComponent.getComponent().Component;\n\n    const HomePageComponent: FC<any> = () => {\n        return (\n            <div>\n                <h3>{selectedComponent.getMenuName()}</h3>\n                <hr />\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage_: {\n            menuName: 'HomePage !',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n        Page1_: {\n            menuName: 'Page1 !',\n            Component: HomePageComponent,\n        },\n        Page2_: {\n            menuName: 'Page2 !',\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return (\n        <>\n            {isReset ? (\n                <div style={{ padding: '20px' }}>\n                    <div>{Comp ? <Comp /> : <div>Error</div>}</div>\n                    <div>\n                        {Object.entries(appStructureState.get()).map(([key, value]) => (\n                            <button\n                                key={key}\n                                onClick={() => selectedComponent.setSelectedComponent(key)}\n                                style={\n                                    selectedComponent.getComponent().menuName === value.menuName\n                                        ? { backgroundColor: 'black', color: 'white' }\n                                        : { backgroundColor: 'white', color: 'black' }\n                                }\n                            >\n                                {value.menuName}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n};\n\nexport const GetComponent = GetComponentTemplate.bind({});\nGetComponent.args = {};\n",locationsMap:{"get-menu-and-menustruct-name":{startLoc:{col:43,line:33},endLoc:{col:1,line:77},startBody:{col:43,line:33},endBody:{col:1,line:77}},"get-component":{startLoc:{col:34,line:82},endLoc:{col:1,line:144},startBody:{col:34,line:82},endBody:{col:1,line:144}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_16__.Uh})]})},description:{component:"usage of hook:useSelectedComponent"}},layout:"fullscreen"}};var GetMenuAndMenustructName=function GetMenuMenustructNameTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Hooks.useAppStructure(),HomePageComponent=function HomePageComponent(){var selectedComponent=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Hooks.useSelectedComponent();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("h3",{children:"getMenuName"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("p",{children:["Selected Menu Name: ",selectedComponent.getMenuName()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("h3",{children:"getMenuStructName"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("p",{children:["Selected Menu Struct Name: ",selectedComponent.getMenuStructName()]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("hr",{})]})},AppStructure={HomePage_:{menuName:"HomePage !",default:!0,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_19__.S,Component:HomePageComponent},Page1_:{menuName:"Page1 !",Component:HomePageComponent},Page2_:{menuName:"Page2 !",Component:HomePageComponent}};return(0,react__WEBPACK_IMPORTED_MODULE_15__.useEffect)((function(){appStructureState.set(AppStructure),titleState.setTitle("getMenuName")}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Parts.SkeletonLoader,{})})}.bind({});GetMenuAndMenustructName.args={};var GetComponent=function GetComponentTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.e.Hooks.useResetAll(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Hooks.useAppStructure(),selectedComponent=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Hooks.useSelectedComponent(),Comp=selectedComponent.getComponent().Component,HomePageComponent=function HomePageComponent(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("h3",{children:selectedComponent.getMenuName()}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("hr",{})]})},AppStructure={HomePage_:{menuName:"HomePage !",default:!0,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_19__.S,Component:HomePageComponent},Page1_:{menuName:"Page1 !",Component:HomePageComponent},Page2_:{menuName:"Page2 !",Component:HomePageComponent}};return(0,react__WEBPACK_IMPORTED_MODULE_15__.useEffect)((function(){appStructureState.set(AppStructure)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsxs)("div",{style:{padding:"20px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("div",{children:Comp?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(Comp,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("div",{children:"Error"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("div",{children:Object.entries(appStructureState.get()).map((function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)("button",{onClick:function onClick(){return selectedComponent.setSelectedComponent(key)},style:selectedComponent.getComponent().menuName===value.menuName?{backgroundColor:"black",color:"white"}:{backgroundColor:"white",color:"black"},children:value.menuName},key)}))})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_18__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_17__.O.Parts.SkeletonLoader,{})})}.bind({});GetComponent.args={},GetMenuAndMenustructName.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const title = 'getMenuName';\n\n    const HomePageComponent: FC<any> = () => {\n        const selectedComponent = Skeleton.Hooks.useSelectedComponent();\n\n        return (\n            <div>\n                <h3>getMenuName</h3>\n                <p>Selected Menu Name: {selectedComponent.getMenuName()}</p>\n                <h3>getMenuStructName</h3>\n                <p>Selected Menu Struct Name: {selectedComponent.getMenuStructName()}</p>\n                <hr />\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage_: {\n            menuName: 'HomePage !',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n        Page1_: {\n            menuName: 'Page1 !',\n            Component: HomePageComponent,\n        },\n        Page2_: {\n            menuName: 'Page2 !',\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},GetMenuAndMenustructName.parameters),GetComponent.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const selectedComponent = Skeleton.Hooks.useSelectedComponent();\n    const Comp = selectedComponent.getComponent().Component;\n\n    const HomePageComponent: FC<any> = () => {\n        return (\n            <div>\n                <h3>{selectedComponent.getMenuName()}</h3>\n                <hr />\n            </div>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage_: {\n            menuName: 'HomePage !',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n        Page1_: {\n            menuName: 'Page1 !',\n            Component: HomePageComponent,\n        },\n        Page2_: {\n            menuName: 'Page2 !',\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n    }, []);\n\n    return (\n        <>\n            {isReset ? (\n                <div style={{ padding: '20px' }}>\n                    <div>{Comp ? <Comp /> : <div>Error</div>}</div>\n                    <div>\n                        {Object.entries(appStructureState.get()).map(([key, value]) => (\n                            <button\n                                key={key}\n                                onClick={() => selectedComponent.setSelectedComponent(key)}\n                                style={\n                                    selectedComponent.getComponent().menuName === value.menuName\n                                        ? { backgroundColor: 'black', color: 'white' }\n                                        : { backgroundColor: 'white', color: 'black' }\n                                }\n                            >\n                                {value.menuName}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n}"}},GetComponent.parameters)},"./stories/Skeleton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Standard:()=>Standard,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js");var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/App/Skeleton",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O,argTypes:{},args:{},parameters:{storySource:{source:"import React, { useEffect } from 'react';\nimport { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\n\nexport default {\n    title: 'Doc/App/Skeleton',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'Simple Skeleton usage',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst Template: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        MenuTest: { ...{ default: true, mainMenu: true }, ...Test.Components.TestMenuComponentStructure },\n        AppInfo: { ...{ mainMenu: true }, ...Skeleton.Components.DummyInfoStateComponentStructure },\n        Test1: Test.Components.Test1Structure,\n        Test2: Test.Components.Test2Structure,\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle('First Skeleton App');\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const Standard = Template.bind({});\nStandard.args = {};\n",locationsMap:{standard:{startLoc:{col:22,line:32},endLoc:{col:1,line:50},startBody:{col:22,line:32},endBody:{col:1,line:50}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Uh})]})},description:{component:"Simple Skeleton usage"}},layout:"fullscreen"}};var Standard=function Template(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppStructure(),AppStructure={MenuTest:Object.assign({},{default:!0,mainMenu:!0},_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.e.Components.TestMenuComponentStructure),AppInfo:Object.assign({},{mainMenu:!0},_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Components.DummyInfoStateComponentStructure),Test1:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.e.Components.Test1Structure,Test2:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.e.Components.Test2Structure};return(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){appStructureState.set(AppStructure),titleState.setTitle("First Skeleton App")}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Parts.SkeletonLoader,{})})}.bind({});Standard.args={},Standard.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        MenuTest: { ...{ default: true, mainMenu: true }, ...Test.Components.TestMenuComponentStructure },\n        AppInfo: { ...{ mainMenu: true }, ...Skeleton.Components.DummyInfoStateComponentStructure },\n        Test1: Test.Components.Test1Structure,\n        Test2: Test.Components.Test2Structure,\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle('First Skeleton App');\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},Standard.parameters)},"./stories/parts/ContentFrame.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__,useComponentFrame:()=>useComponentFrame});__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/grommet-icons/es6/icons/Home.js"),grommet_icons__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/grommet-icons/es6/icons/System.js"),grommet__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/grommet/es6/components/Button/Button.js"),grommet__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/grommet/es6/components/Box/Box.js"),grommet__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/grommet/es6/components/Text/Text.js"),grommet__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/grommet/es6/components/Table/Table.js"),grommet__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/grommet/es6/components/TableBody/TableBody.js"),grommet__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/grommet/es6/components/TableRow/TableRow.js"),grommet__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/grommet/es6/components/TableCell/TableCell.js"),grommet__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/grommet/es6/components/CheckBox/CheckBox.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Parts/ContentFrame",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O,argTypes:{},args:{},parameters:{storySource:{source:"import React, { FC, useEffect } from 'react';\nimport { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\nimport { Home, System } from 'grommet-icons';\nimport { Box, Button, CheckBox, Table, TableBody, TableCell, TableRow, Text } from 'grommet';\n\nexport default {\n    title: 'Doc/Skeleton/Parts/ContentFrame',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of part:ContentFrame',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst TestButton: FC<any> = ({ onClick, label }: any) => {\n    return (\n        <Button plain onClick={onClick}>\n            <Box\n                round=\"small\"\n                pad={{ vertical: 'none', horizontal: 'small' }}\n                background={{ color: 'brand', opacity: true }}\n                elevation=\"xsmall\"\n            >\n                <Text size=\"small\">{label}</Text>\n            </Box>\n        </Button>\n    );\n};\n\nconst TestTableContent: FC<any> = ({ scope, id, title }: any) => {\n    return (\n        <Table>\n            <TableBody>\n                <TableRow>\n                    <TableCell align=\"right\" plain scope=\"row\" size=\"xsmall\" pad=\"none\" margin=\"none\">\n                        <Text size=\"small\">Scope:</Text>\n                    </TableCell>\n                    <TableCell plain pad={{ vertical: 'none', horizontal: 'xsmall' }} margin=\"none\">\n                        <Text size=\"small\">{scope}</Text>\n                    </TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell align=\"right\" plain pad=\"none\" margin=\"none\">\n                        <Text size=\"small\">ID:</Text>\n                    </TableCell>\n                    <TableCell pad={{ vertical: 'none', horizontal: 'xsmall' }} margin=\"none\">\n                        <Text size=\"small\">{id}</Text>\n                    </TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell align=\"right\" plain pad=\"none\" margin=\"none\">\n                        <Text size=\"small\">Title:</Text>\n                    </TableCell>\n                    <TableCell plain pad={{ vertical: 'none', horizontal: 'xsmall' }} margin=\"none\">\n                        <Text size=\"small\">{title}</Text>\n                    </TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    );\n};\n\nconst SetTitleTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const componentFrameState = Skeleton.Hooks.useComponentFrameState();\n\n    const title = 'ContentFrame';\n\n    const HomePageComponent: FC<any> = () => {\n        const scope = 'Scope';\n        const id1 = '0';\n        const id2 = '1';\n        const title1 = 'ContentFrame1';\n        const title2 = 'ContentFrame2';\n\n        useEffect(() => {\n            componentFrameState.setTitle(scope, id1, title1);\n            componentFrameState.setTitleIcon(scope, id1, Home);\n            componentFrameState.setTitle(scope, id2, title2);\n            componentFrameState.setTitle('scopeControlls', 'controlls', 'Controlls');\n            componentFrameState.setTitleIcon('scopeControlls', 'controlls', System);\n            // componentFrameState.setFrameColor('scopeControlls', 'controlls', 'status-critical');\n            componentFrameState.setFrameColor('scopeControlls', 'controlls', 'dark-1');\n            componentFrameState.setHeaderBackgroundColor('scopeControlls', 'controlls', 'accent-4');\n            componentFrameState.setContentBackgroundColor('scopeControlls', 'controlls', {\n                dark: 'light-6',\n                light: 'dark-6',\n            });\n            componentFrameState.setBoxProps('scopeControlls', 'controlls', {\n                round: 'none',\n                pad: { horizontal: 'small' },\n            });\n            componentFrameState.setScopeBoxProps(scope, {\n                margin: { top: 'small' },\n            });\n        }, []);\n        return (\n            <Box>\n                <Skeleton.Parts.ContentFrame id={'controlls'} scope={'scopeControlls'}>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell scope=\"row\">\n                                    <CheckBox\n                                        label=\"All Collapsable\"\n                                        onChange={(event) =>\n                                            componentFrameState.setScopeCollapsible(scope, event.target.checked)\n                                        }\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        onClick={() => componentFrameState.setScopeCollapsed(scope, true)}\n                                        label=\"Collapse all\"\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        onClick={() => componentFrameState.setScopeCollapsed(scope, false)}\n                                        label=\"Expand all\"\n                                    />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>\n                                    <CheckBox\n                                        label=\"All Closable\"\n                                        onChange={(event) =>\n                                            componentFrameState.setScopeClosable(scope, event.target.checked)\n                                        }\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        label=\"Close all\"\n                                        onClick={() => componentFrameState.setScopeClosed(scope, true)}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        label=\"Open all\"\n                                        onClick={() => componentFrameState.setScopeClosed(scope, false)}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>\n                                    <CheckBox\n                                        label=\"Hide All Bodies\"\n                                        onChange={(event) =>\n                                            componentFrameState.setScopeShowBody(scope, !event.target.checked)\n                                        }\n                                    />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell />\n                                <TableCell>\n                                    <TestButton\n                                        label=\"Only Show ContentFrame1\"\n                                        onClick={() => {\n                                            componentFrameState.setClosed(scope, id1, false);\n                                            componentFrameState.setClosed(scope, id2, true);\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        label=\"Only Show ContentFrame2\"\n                                        onClick={() => {\n                                            componentFrameState.setClosed(scope, id1, true);\n                                            componentFrameState.setClosed(scope, id2, false);\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Skeleton.Parts.ContentFrame>\n                <Skeleton.Parts.ContentFrame id={id1} scope={scope}>\n                    <TestTableContent scope={scope} id={id1} title={componentFrameState.getTitle(scope, id1)} />\n                </Skeleton.Parts.ContentFrame>\n                <Skeleton.Parts.ContentFrame id={id2} scope={scope}>\n                    <TestTableContent scope={scope} id={id2} title={componentFrameState.getTitle(scope, id1)} />\n                </Skeleton.Parts.ContentFrame>\n            </Box>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n};\n\nexport const useComponentFrame = SetTitleTemplate.bind({});\n",locationsMap:{"use-component-frame":{startLoc:{col:30,line:82},endLoc:{col:1,line:226},startBody:{col:30,line:82},endBody:{col:1,line:226}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_3__.Uh})]})},description:{component:"usage of part:ContentFrame"}},layout:"fullscreen"}};var TestButton=function TestButton(_ref){var onClick=_ref.onClick,label=_ref.label;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_6__.z,{plain:!0,onClick,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_7__.x,{round:"small",pad:{vertical:"none",horizontal:"small"},background:{color:"brand",opacity:!0},elevation:"xsmall",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_8__.x,{size:"small",children:label})})})};TestButton.displayName="TestButton";var TestTableContent=function TestTableContent(_ref2){var scope=_ref2.scope,id=_ref2.id,title=_ref2.title;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_9__.i,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_10__.R,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_11__.S,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{align:"right",plain:!0,scope:"row",size:"xsmall",pad:"none",margin:"none",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_8__.x,{size:"small",children:"Scope:"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{plain:!0,pad:{vertical:"none",horizontal:"xsmall"},margin:"none",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_8__.x,{size:"small",children:scope})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_11__.S,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{align:"right",plain:!0,pad:"none",margin:"none",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_8__.x,{size:"small",children:"ID:"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{pad:{vertical:"none",horizontal:"xsmall"},margin:"none",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_8__.x,{size:"small",children:id})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_11__.S,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{align:"right",plain:!0,pad:"none",margin:"none",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_8__.x,{size:"small",children:"Title:"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{plain:!0,pad:{vertical:"none",horizontal:"xsmall"},margin:"none",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_8__.x,{size:"small",children:title})})]})]})})};TestTableContent.displayName="TestTableContent";var useComponentFrame=function SetTitleTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.e.Hooks.useResetAll(),titleState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppTitle(),appStructureState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useAppStructure(),componentFrameState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Hooks.useComponentFrameState(),AppStructure={HomePage:{menuName:"HomePage",default:!0,menuIcon:grommet_icons__WEBPACK_IMPORTED_MODULE_13__.S,Component:function HomePageComponent(){var scope="Scope";return(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){componentFrameState.setTitle(scope,"0","ContentFrame1"),componentFrameState.setTitleIcon(scope,"0",grommet_icons__WEBPACK_IMPORTED_MODULE_13__.S),componentFrameState.setTitle(scope,"1","ContentFrame2"),componentFrameState.setTitle("scopeControlls","controlls","Controlls"),componentFrameState.setTitleIcon("scopeControlls","controlls",grommet_icons__WEBPACK_IMPORTED_MODULE_14__.x),componentFrameState.setFrameColor("scopeControlls","controlls","dark-1"),componentFrameState.setHeaderBackgroundColor("scopeControlls","controlls","accent-4"),componentFrameState.setContentBackgroundColor("scopeControlls","controlls",{dark:"light-6",light:"dark-6"}),componentFrameState.setBoxProps("scopeControlls","controlls",{round:"none",pad:{horizontal:"small"}}),componentFrameState.setScopeBoxProps(scope,{margin:{top:"small"}})}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_7__.x,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Parts.ContentFrame,{id:"controlls",scope:"scopeControlls",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_9__.i,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_10__.R,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_11__.S,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{scope:"row",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_15__.J,{label:"All Collapsable",onChange:function onChange(event){return componentFrameState.setScopeCollapsible(scope,event.target.checked)}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TestButton,{onClick:function onClick(){return componentFrameState.setScopeCollapsed(scope,!0)},label:"Collapse all"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TestButton,{onClick:function onClick(){return componentFrameState.setScopeCollapsed(scope,!1)},label:"Expand all"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_11__.S,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_15__.J,{label:"All Closable",onChange:function onChange(event){return componentFrameState.setScopeClosable(scope,event.target.checked)}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TestButton,{label:"Close all",onClick:function onClick(){return componentFrameState.setScopeClosed(scope,!0)}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TestButton,{label:"Open all",onClick:function onClick(){return componentFrameState.setScopeClosed(scope,!1)}})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_11__.S,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_15__.J,{label:"Hide All Bodies",onChange:function onChange(event){return componentFrameState.setScopeShowBody(scope,!event.target.checked)}})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(grommet__WEBPACK_IMPORTED_MODULE_11__.S,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TestButton,{label:"Only Show ContentFrame1",onClick:function onClick(){componentFrameState.setClosed(scope,"0",!1),componentFrameState.setClosed(scope,"1",!0)}})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_12__.p,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TestButton,{label:"Only Show ContentFrame2",onClick:function onClick(){componentFrameState.setClosed(scope,"0",!0),componentFrameState.setClosed(scope,"1",!1)}})})]})]})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Parts.ContentFrame,{id:"0",scope,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TestTableContent,{scope,id:"0",title:componentFrameState.getTitle(scope,"0")})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Parts.ContentFrame,{id:"1",scope,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(TestTableContent,{scope,id:"1",title:componentFrameState.getTitle(scope,"0")})})]})}}};return(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){appStructureState.set(AppStructure),titleState.setTitle("ContentFrame")}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.App,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_4__.O.Parts.SkeletonLoader,{})})}.bind({});useComponentFrame.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const titleState = Skeleton.Hooks.useAppTitle();\n    const appStructureState = Skeleton.Hooks.useAppStructure();\n    const componentFrameState = Skeleton.Hooks.useComponentFrameState();\n\n    const title = 'ContentFrame';\n\n    const HomePageComponent: FC<any> = () => {\n        const scope = 'Scope';\n        const id1 = '0';\n        const id2 = '1';\n        const title1 = 'ContentFrame1';\n        const title2 = 'ContentFrame2';\n\n        useEffect(() => {\n            componentFrameState.setTitle(scope, id1, title1);\n            componentFrameState.setTitleIcon(scope, id1, Home);\n            componentFrameState.setTitle(scope, id2, title2);\n            componentFrameState.setTitle('scopeControlls', 'controlls', 'Controlls');\n            componentFrameState.setTitleIcon('scopeControlls', 'controlls', System);\n            // componentFrameState.setFrameColor('scopeControlls', 'controlls', 'status-critical');\n            componentFrameState.setFrameColor('scopeControlls', 'controlls', 'dark-1');\n            componentFrameState.setHeaderBackgroundColor('scopeControlls', 'controlls', 'accent-4');\n            componentFrameState.setContentBackgroundColor('scopeControlls', 'controlls', {\n                dark: 'light-6',\n                light: 'dark-6',\n            });\n            componentFrameState.setBoxProps('scopeControlls', 'controlls', {\n                round: 'none',\n                pad: { horizontal: 'small' },\n            });\n            componentFrameState.setScopeBoxProps(scope, {\n                margin: { top: 'small' },\n            });\n        }, []);\n        return (\n            <Box>\n                <Skeleton.Parts.ContentFrame id={'controlls'} scope={'scopeControlls'}>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell scope=\"row\">\n                                    <CheckBox\n                                        label=\"All Collapsable\"\n                                        onChange={(event) =>\n                                            componentFrameState.setScopeCollapsible(scope, event.target.checked)\n                                        }\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        onClick={() => componentFrameState.setScopeCollapsed(scope, true)}\n                                        label=\"Collapse all\"\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        onClick={() => componentFrameState.setScopeCollapsed(scope, false)}\n                                        label=\"Expand all\"\n                                    />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>\n                                    <CheckBox\n                                        label=\"All Closable\"\n                                        onChange={(event) =>\n                                            componentFrameState.setScopeClosable(scope, event.target.checked)\n                                        }\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        label=\"Close all\"\n                                        onClick={() => componentFrameState.setScopeClosed(scope, true)}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        label=\"Open all\"\n                                        onClick={() => componentFrameState.setScopeClosed(scope, false)}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>\n                                    <CheckBox\n                                        label=\"Hide All Bodies\"\n                                        onChange={(event) =>\n                                            componentFrameState.setScopeShowBody(scope, !event.target.checked)\n                                        }\n                                    />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell />\n                                <TableCell>\n                                    <TestButton\n                                        label=\"Only Show ContentFrame1\"\n                                        onClick={() => {\n                                            componentFrameState.setClosed(scope, id1, false);\n                                            componentFrameState.setClosed(scope, id2, true);\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <TestButton\n                                        label=\"Only Show ContentFrame2\"\n                                        onClick={() => {\n                                            componentFrameState.setClosed(scope, id1, true);\n                                            componentFrameState.setClosed(scope, id2, false);\n                                        }}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </Skeleton.Parts.ContentFrame>\n                <Skeleton.Parts.ContentFrame id={id1} scope={scope}>\n                    <TestTableContent scope={scope} id={id1} title={componentFrameState.getTitle(scope, id1)} />\n                </Skeleton.Parts.ContentFrame>\n                <Skeleton.Parts.ContentFrame id={id2} scope={scope}>\n                    <TestTableContent scope={scope} id={id2} title={componentFrameState.getTitle(scope, id1)} />\n                </Skeleton.Parts.ContentFrame>\n            </Box>\n        );\n    };\n\n    const AppStructure: Skeleton.Types.T_AppStructure = {\n        HomePage: {\n            menuName: 'HomePage',\n            default: true,\n            menuIcon: Home,\n            Component: HomePageComponent,\n        },\n    };\n\n    useEffect(() => {\n        appStructureState.set(AppStructure);\n        titleState.setTitle(title);\n    }, []);\n\n    return <>{isReset ? <Skeleton.App /> : <Skeleton.Parts.SkeletonLoader />}</>;\n}"}},useComponentFrame.parameters)},"./stories/parts/MessageBox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NotRegisteredMessage:()=>NotRegisteredMessage,RegisteredMessage:()=>RegisteredMessage,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.date.now.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Parts/MessageBox",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__.O,argTypes:{},args:{},parameters:{storySource:{source:"import { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { useEffect } from 'react';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\n\nexport default {\n    title: 'Doc/Skeleton/Parts/MessageBox',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of part:MessageBox',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst NotRegisteredMessageTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const msg: Skeleton.Types.T_AppMessage = {\n        time: Date.now(),\n        severity: 'success',\n        msgTitle: 'Hallo Title',\n        msgMessage: 'Hallo Message',\n        new: true,\n        msgError: new Error('Hallo Error'),\n        popUpOnSkeleton: true,\n    };\n    return (\n        <>\n            {isReset ? (\n                <div>\n                    <h3>NotRegisteredMessage</h3>\n                    <p>Message should not be showed because it is not yet registered</p>\n                    <hr />\n                    <Skeleton.Parts.MessageBox msg={msg} />\n                </div>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n};\n\nexport const NotRegisteredMessage = NotRegisteredMessageTemplate.bind({});\nNotRegisteredMessage.args = {};\n\nconst RegisteredMessageTemplate: any = () => {\n    const isReset = Test.Hooks.useResetAll();\n    const messageState = Skeleton.Hooks.useMessages();\n    useEffect(() => {\n        messageState.addNewMessage('Hallo Title', 'Hallo Message', 'success', new Error('Hallo Error'), true);\n    }, []);\n\n    return (\n        <>\n            {isReset ? (\n                <div>\n                    <h3>RegisteredMessage</h3>\n                    <p>New Message should be showed as it is registered</p>\n                    <hr />\n                    {messageState.getNewCount() > 0 ? (\n                        <Skeleton.Parts.MessageBox msg={messageState.getLastNew()} />\n                    ) : (\n                        <p>no new Message</p>\n                    )}\n                </div>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n};\n\nexport const RegisteredMessage = RegisteredMessageTemplate.bind({});\nRegisteredMessage.args = {};\n",locationsMap:{"not-registered-message":{startLoc:{col:42,line:32},endLoc:{col:1,line:57},startBody:{col:42,line:32},endBody:{col:1,line:57}},"registered-message":{startLoc:{col:39,line:62},endLoc:{col:1,line:87},startBody:{col:39,line:62},endBody:{col:1,line:87}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.Uh})]})},description:{component:"usage of part:MessageBox"}},layout:"fullscreen"}};var NotRegisteredMessage=function NotRegisteredMessageTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__.e.Hooks.useResetAll(),msg={time:Date.now(),severity:"success",msgTitle:"Hallo Title",msgMessage:"Hallo Message",new:!0,msgError:new Error("Hallo Error"),popUpOnSkeleton:!0};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("h3",{children:"NotRegisteredMessage"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p",{children:"Message should not be showed because it is not yet registered"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("hr",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__.O.Parts.MessageBox,{msg})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__.O.Parts.SkeletonLoader,{})})}.bind({});NotRegisteredMessage.args={};var RegisteredMessage=function RegisteredMessageTemplate(){var isReset=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__.e.Hooks.useResetAll(),messageState=_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__.O.Hooks.useMessages();return(0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)((function(){messageState.addNewMessage("Hallo Title","Hallo Message","success",new Error("Hallo Error"),!0)}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:isReset?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("h3",{children:"RegisteredMessage"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p",{children:"New Message should be showed as it is registered"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("hr",{}),messageState.getNewCount()>0?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__.O.Parts.MessageBox,{msg:messageState.getLastNew()}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p",{children:"no new Message"})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_6__.O.Parts.SkeletonLoader,{})})}.bind({});RegisteredMessage.args={},NotRegisteredMessage.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const msg: Skeleton.Types.T_AppMessage = {\n        time: Date.now(),\n        severity: 'success',\n        msgTitle: 'Hallo Title',\n        msgMessage: 'Hallo Message',\n        new: true,\n        msgError: new Error('Hallo Error'),\n        popUpOnSkeleton: true,\n    };\n    return (\n        <>\n            {isReset ? (\n                <div>\n                    <h3>NotRegisteredMessage</h3>\n                    <p>Message should not be showed because it is not yet registered</p>\n                    <hr />\n                    <Skeleton.Parts.MessageBox msg={msg} />\n                </div>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n}"}},NotRegisteredMessage.parameters),RegisteredMessage.parameters=Object.assign({storySource:{source:"() => {\n    const isReset = Test.Hooks.useResetAll();\n    const messageState = Skeleton.Hooks.useMessages();\n    useEffect(() => {\n        messageState.addNewMessage('Hallo Title', 'Hallo Message', 'success', new Error('Hallo Error'), true);\n    }, []);\n\n    return (\n        <>\n            {isReset ? (\n                <div>\n                    <h3>RegisteredMessage</h3>\n                    <p>New Message should be showed as it is registered</p>\n                    <hr />\n                    {messageState.getNewCount() > 0 ? (\n                        <Skeleton.Parts.MessageBox msg={messageState.getLastNew()} />\n                    ) : (\n                        <p>no new Message</p>\n                    )}\n                </div>\n            ) : (\n                <Skeleton.Parts.SkeletonLoader />\n            )}\n        </>\n    );\n}"}},RegisteredMessage.parameters)},"./stories/parts/SkeletonLoader.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SkeletonLoader:()=>SkeletonLoader,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@swissglider/react_skeleton_framework/dist/esm/index.js"),_storybook_addon_links__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-links/dist/esm/index.js"),grommet__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/grommet/es6/components/Button/Button.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Doc/Skeleton/Parts/SkeletonLoader",component:_swissglider_react_skeleton_framework__WEBPACK_IMPORTED_MODULE_3__.O,argTypes:{},args:{},parameters:{storySource:{source:"import { Title, Subtitle, Description, Primary, ArgsTable, PRIMARY_STORY } from '@storybook/addon-docs';\nimport { Skeleton, Test } from '@swissglider/react_skeleton_framework';\nimport { linkTo } from '@storybook/addon-links';\nimport { Button } from 'grommet';\n\nexport default {\n    title: 'Doc/Skeleton/Parts/SkeletonLoader',\n    component: Skeleton,\n    argTypes: {},\n    args: {},\n    parameters: {\n        controls: { hideNoControlsWarning: true },\n        docs: {\n            page: () => {\n                return (\n                    <>\n                        <Title />\n                        <Subtitle />\n                        <Description />\n                        <Primary />\n                        <ArgsTable story={PRIMARY_STORY} />\n                    </>\n                );\n            },\n            description: {\n                component: 'usage of part:SkeletonLoader',\n            },\n        },\n        layout: 'fullscreen',\n    },\n};\n\nconst SetTitleTemplate: any = () => {\n    return (\n        <div>\n            <Button onClick={linkTo('Doc/Skeleton/Hooks/useAppTitle')} plain>\n                <h3>GoTo Hooks useAppTitle to see how to use</h3>\n            </Button>\n        </div>\n    );\n};\n\nexport const SkeletonLoader = SetTitleTemplate.bind({});\nSkeletonLoader.args = {};\n",locationsMap:{"skeleton-loader":{startLoc:{col:30,line:33},endLoc:{col:1,line:41},startBody:{col:30,line:33},endBody:{col:1,line:41}}}},controls:{hideNoControlsWarning:!0},docs:{page:function page(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.sq,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.$4,{story:_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.Uh})]})},description:{component:"usage of part:SkeletonLoader"}},layout:"fullscreen"}};var SetTitleTemplate=function SetTitleTemplate(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(grommet__WEBPACK_IMPORTED_MODULE_6__.z,{onClick:(0,_storybook_addon_links__WEBPACK_IMPORTED_MODULE_4__.kZ)("Doc/Skeleton/Hooks/useAppTitle"),plain:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h3",{children:"GoTo Hooks useAppTitle to see how to use"})})})};SetTitleTemplate.displayName="SetTitleTemplate";var SkeletonLoader=SetTitleTemplate.bind({});SkeletonLoader.args={},SkeletonLoader.parameters=Object.assign({storySource:{source:"() => {\n    return (\n        <div>\n            <Button onClick={linkTo('Doc/Skeleton/Hooks/useAppTitle')} plain>\n                <h3>GoTo Hooks useAppTitle to see how to use</h3>\n            </Button>\n        </div>\n    );\n}"}},SkeletonLoader.parameters)},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./Hooks/useAppStructure.stories.tsx":"./stories/Hooks/useAppStructure.stories.tsx","./Hooks/useAppTitle.stories.tsx":"./stories/Hooks/useAppTitle.stories.tsx","./Hooks/useAppType.stories.tsx":"./stories/Hooks/useAppType.stories.tsx","./Hooks/useComponentFrameState.stories.tsx":"./stories/Hooks/useComponentFrameState.stories.tsx","./Hooks/useComponentHistory.stories.tsx":"./stories/Hooks/useComponentHistory.stories.tsx","./Hooks/useGrommetTheme.stories.tsx":"./stories/Hooks/useGrommetTheme.stories.tsx","./Hooks/useMessages.stories.tsx":"./stories/Hooks/useMessages.stories.tsx","./Hooks/useSelectedComponent.stories.tsx":"./stories/Hooks/useSelectedComponent.stories.tsx","./Skeleton.stories.tsx":"./stories/Skeleton.stories.tsx","./parts/ContentFrame.stories.tsx":"./stories/parts/ContentFrame.stories.tsx","./parts/MessageBox.stories.tsx":"./stories/parts/MessageBox.stories.tsx","./parts/SkeletonLoader.stories.tsx":"./stories/parts/SkeletonLoader.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$",module.exports=webpackEmptyContext},"?4f7e":()=>{}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[273],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/dist/esm/preset/argsEnhancers.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.js"))));__webpack_require__.O()}]);